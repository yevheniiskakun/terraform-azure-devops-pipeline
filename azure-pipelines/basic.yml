trigger:
  branches:
    include:
      - main  # Trigger pipeline on commits to the main branch

pool:
  name: 'Default'

variables:
  terraformVersion: '1.5.5'  # Specify the Terraform version
  azureServiceConnection: 'azurerm'  # Azure service connection name
  backendResourceGroup: 'skink-rg' # Remote backend Resource Group
  backendStorageAccount: 'skinktfstate'  # Remote backend storage account
  backendContainer: 'tfstate'  # Remote backend storage container
  backendKey: 'terraform.tfstate'  # State file name in remote backend

stages:
  # Stage 1: Initialization (init, validate, lint)
  - stage: Initialization
    jobs:
      - job: TerraformInit
        steps:
          - task: TerraformInstaller@0  # Install Terraform
            inputs:
              terraformVersion: $(terraformVersion)

          # Initialize Terraform
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              backendServiceArm: $(azureServiceConnection)
              backendAzureRmResourceGroupName: $(backendResourceGroup)
              backendAzureRmStorageAccountName: $(backendStorageAccount)
              backendAzureRmContainerName: $(backendContainer)
              backendAzureRmKey: $(backendKey)
              command: 'init'  # Initialize Terraform
              workingDirectory: 'terraform'  # Set the working directory

          # Validate Terraform configuration
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'  # Validate Terraform configuration
              workingDirectory: 'terraform'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'  # Run terraform plan
              environmentServiceNameAzureRM: $(azureServiceConnection)  # Azure service connection for authentication
              workingDirectory: 'terraform'  # Set the working directory
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'  # Run terraform apply
              backendServiceArm: $(azureServiceConnection)
              commandOptions: '--auto-approve'
              environmentServiceNameAzureRM: $(azureServiceConnection)  # Azure service connection for authentication
              workingDirectory: 'terraform'  # Set the working directory
